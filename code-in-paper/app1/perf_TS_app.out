Using TensorFlow backend.
/home/ben/anaconda3/envs/taylor/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/ben/anaconda3/envs/taylor/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/ben/anaconda3/envs/taylor/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/ben/anaconda3/envs/taylor/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/ben/anaconda3/envs/taylor/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/ben/anaconda3/envs/taylor/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/ben/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/ben/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/ben/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/ben/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/ben/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/ben/.local/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
WARNING: Logging before flag parsing goes to stderr.
W0513 21:42:26.070580 139790939866944 deprecation_wrapper.py:119] From /home/ben/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py:4070: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.

2020-05-13 21:42:26.254944: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2020-05-13 21:42:26.278886: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3699850000 Hz
2020-05-13 21:42:26.279284: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55ef6cca9e40 executing computations on platform Host. Devices:
2020-05-13 21:42:26.279304: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
2020-05-13 21:42:26.279987: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library libcuda.so.1
2020-05-13 21:42:26.288345: E tensorflow/stream_executor/cuda/cuda_driver.cc:318] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
2020-05-13 21:42:26.288380: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (Gibbs): /proc/driver/nvidia/version does not exist
2020-05-13 21:42:26.390131: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
W0513 21:42:26.601814 139790939866944 deprecation.py:323] From /home/ben/anaconda3/envs/taylor/lib/python3.6/site-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
W0513 21:42:26.917359 139790939866944 deprecation_wrapper.py:119] From /home/ben/.local/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py:422: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Type 1 error: 0.056; p_value: 0.495, inference sample ratio: 0.400
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Restoring model weights from the end of the best epoch
Epoch 00022: early stopping
Type 1 error: 0.048; p_value: 0.501, inference sample ratio: 0.300
0-th inference; Adaptive data splitting: n: 5701; m: 4275
Restoring model weights from the end of the best epoch
Epoch 00034: early stopping
Restoring model weights from the end of the best epoch
Epoch 00029: early stopping
diff: -0.002(0.122); metric: 0.007(0.081); metric_mask: 0.008(0.091)
accept H0 with p_value: 0.159
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Restoring model weights from the end of the best epoch
Epoch 00022: early stopping
Type 1 error: 0.065; p_value: 0.510, inference sample ratio: 0.400
Restoring model weights from the end of the best epoch
Epoch 00023: early stopping
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Type 1 error: 0.057; p_value: 0.512, inference sample ratio: 0.300
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Type 1 error: 0.043; p_value: 0.519, inference sample ratio: 0.200
1-th inference; Adaptive data splitting: n: 8551; m: 2850
Restoring model weights from the end of the best epoch
Epoch 00039: early stopping
Restoring model weights from the end of the best epoch
Epoch 00033: early stopping
diff: 0.001(0.084); metric: 0.004(0.065); metric_mask: 0.003(0.053)
accept H0 with p_value: 0.814
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
Type 1 error: 0.048; p_value: 0.509, inference sample ratio: 0.400
2-th inference; Adaptive data splitting: n: 2851; m: 5700
Restoring model weights from the end of the best epoch
Epoch 00027: early stopping
Restoring model weights from the end of the best epoch
Epoch 00021: early stopping
diff: -0.470(0.517); metric: 0.016(0.124); metric_mask: 0.485(0.500)
reject H0 with p_value: 0.000
testing time: 1508.191
